 Address    Code        Basic                     Source

0x00400000  0x00004021  addu $8,$0,$0         5    main:	addu	$t0, $zero, $zero	# $t0 guarda os clocks ja consumidos nas instrucoes - 4 clocks
0x00400004  0x00004821  addu $9,$0,$0         6    	addu	$t1, $zero, $zero	# $t1 guarda o float do numero - 4 clocks
0x00400008  0x00005021  addu $10,$0,$0        7    	addu	$t2, $zero, $zero	# $t2 guarda unidade de seg - 4 clocks
0x0040000c  0x00005821  addu $11,$0,$0        8    	addu	$t3, $zero, $zero	# $t3 guarda casa dos dezenas - 4 clocks
0x00400010  0x00006021  addu $12,$0,$0        9    	addu	$t4, $zero, $zero	# $t4 guarda casa das centenas - 4 clocks
0x00400014  0x3c011001  lui $1,0x00001001     10   	la	$t5, out_dec_s		# $t5 guarda address pra salvar o float - 4 clocks
0x00400018  0x342d0004  ori $13,$1,0x00000004      
0x0040001c  0x8dad0000  lw $13,0x00000000($13)11   	lw	$t5, 0($t5)		# - 5 clocks
0x00400020  0x3c011001  lui $1,0x00001001     12   	la	$t6, out_un		# $t6 guarda address pra salvar unidade de seg - 4 clocks
0x00400024  0x342e0008  ori $14,$1,0x00000008      
0x00400028  0x8dce0000  lw $14,0x00000000($14)13   	lw	$t6, 0($t6)		# - 5 clocks
0x0040002c  0x3c011001  lui $1,0x00001001     14   	la	$t7, out_dz		# $t7 guarda address pra salvar casa das dezenas - 4 clocks
0x00400030  0x342f000c  ori $15,$1,0x0000000c      
0x00400034  0x8def0000  lw $15,0x00000000($15)15   	lw	$t7, 0($t7)		# - 5 clocks
0x00400038  0x3c011001  lui $1,0x00001001     16   	la	$s0, out_ct		# $s0 guarda address pra salvar casa das centenas - 4 clocks
0x0040003c  0x34300010  ori $16,$1,0x00000010      
0x00400040  0x8e100000  lw $16,0x00000000($16)17   	lw	$s0, 0($s0)		# - 5 clocks
0x00400044  0x3c011001  lui $1,0x00001001     18   	la	$s1, ins_limit 		# $s1 guarda valor pra comparacao de clocks (1.250.000) - 4 clocks
0x00400048  0x34310000  ori $17,$1,0x00000000      
0x0040004c  0x8e310000  lw $17,0x00000000($17)19   	lw	$s1, 0($s1)		# - 5 clocks
0x00400050  0x24120009  addiu $18,$0,0x000000020   	addiu	$s2, $zero, 9	 	# $s2 guarda o 9 pra comparacao de max de cada casa - 4 clocks
0x00400054  0x3c011001  lui $1,0x00001001     21   	la	$s3, dummy_slot		# adiciona 4 clocks e bota um address inutil - 4 clocks
0x00400058  0x34330014  ori $19,$1,0x00000014      
0x0040005c  0x8e600000  lw $0,0x00000000($19) 22   	lw	$zero, 0($s3)		# - 5 clocks
0x00400060  0x8e600000  lw $0,0x00000000($19) 23   	lw	$zero, 0($s3)		# - 5 clocks
0x00400064  0x8e600000  lw $0,0x00000000($19) 24   	lw	$zero, 0($s3)		# - 5 clocks
0x00400068  0x00000000  nop                   25   	nop				# adiciona 4 clocks - 4 clocks
0x0040006c  0x25080060  addiu $8,$8,0x0000006026   	addiu	$t0, $t0, 96 		# adiciona os clocks passados com a conclusao dessa instrucao no counter - 4 clocks
0x00400070  0x11110003  beq $8,$17,0x00000003 28   somins:	beq	$t0, $s1, somflt	# verifica se as instrucoes atingiram o limite - 4 clocks
0x00400074  0x00000000  nop                   29   	nop				# adiciona 4 clocks - 4 clocks
0x00400078  0x25080010  addiu $8,$8,0x0000001030   	addiu	$t0, $t0, 16		# soma no contador de instrucoes as instrucoes ate agr + a proxima de jump - 4 clocks
0x0040007c  0x0810001c  j 0x00400070          31   	j 	somins			# volta pro loop - 4 clocks
0x00400080  0x11320006  beq $9,$18,0x00000006 33   somflt:	beq	$t1, $s2, somuni	# verifica se o float esta em 9 - 4 clocks
0x00400084  0x25290001  addiu $9,$9,0x0000000134   	addiu	$t1, $t1, 1		# soma 1 ao contador de float - 4 clocks
0x00400088  0xa1a90000  sb $9,0x00000000($13) 35   	sb	$t1, 0($t5)		# salva na memoria o valor atual de float - 4 clocks
0x0040008c  0x00000000  nop                   36   	nop				# adiciona 4 clocks - 4 clocks
0x00400090  0x00000000  nop                   37   	nop				# adiciona 4 clocks - 4 clocks
0x00400094  0x24080020  addiu $8,$0,0x0000002038   	addiu	$t0, $zero, 32		# zera e soma os clocks passados contando com o prox jump ja - 4 clocks
0x00400098  0x0810001c  j 0x00400070          39   	j	somins			# volta pro somins pra contar instrucoes - 4 clocks
0x0040009c  0x11520009  beq $10,$18,0x0000000941   somuni:	beq	$t2, $s2, somdez	# verifica se a casa das unidades chegou em 9 - 4 clocks
0x004000a0  0x254a0001  addiu $10,$10,0x00000042   	addiu	$t2, $t2, 1		# adiciona 1 a casa das unidades - 4 clocks
0x004000a4  0xa1ca0000  sb $10,0x00000000($14)43   	sb	$t2, 0($t6)		# salva o valor das unidades na memoria - 4 clocks
0x004000a8  0x00004821  addu $9,$0,$0         44   	addu	$t1, $zero, $zero	# zera o contador de float - 4 clocks
0x004000ac  0xa1a90000  sb $9,0x00000000($13) 45   	sb	$t1, 0($t5)		# salva nos reg o valor atual de float - 4 clocks
0x004000b0  0x00000000  nop                   46   	nop				# adiciona 4 clocks - 4 clocks
0x004000b4  0x00000000  nop                   47   	nop				# adiciona 4 clocks - 4 clocks
0x004000b8  0x00000000  nop                   48   	nop				# adiciona 4 clocks - 4 clocks
0x004000bc  0x24080030  addiu $8,$0,0x0000003049   	addiu	$t0, $zero, 48		# soma os clocks passados com o jump a seguir - 4 clocks
0x004000c0  0x0810001c  j 0x00400070          50   	j	somins			# pula para o somins - 4 clocks
0x004000c4  0x11720008  beq $11,$18,0x0000000852   somdez:	beq	$t3, $s2, somcen	# verifica se a casa das dezenas atingiu 9 - 4 clocks
0x004000c8  0x256b0001  addiu $11,$11,0x00000053   	addiu	$t3, $t3, 1		# soma 1 a casa das dezenas - 4 clocks
0x004000cc  0xa1eb0000  sb $11,0x00000000($15)54   	sb	$t3, 0($t7)		# salva na memoria o valor das dezenas - 4 clocks
0x004000d0  0x00004821  addu $9,$0,$0         55   	addu	$t1, $zero, $zero	# zera o contador de float - 4 clocks
0x004000d4  0xa1a90000  sb $9,0x00000000($13) 56   	sb	$t1, 0($t5)		# salva na memoria o valor do float - 4 clocks
0x004000d8  0x00005021  addu $10,$0,$0        57   	addu 	$t2, $zero, $zero	# zera o contador de unidades - 4 clocks
0x004000dc  0xa1ca0000  sb $10,0x00000000($14)58   	sb	$t2, 0($t6)		# salva na memoria o valor das unidades - 4 clocks
0x004000e0  0x24080030  addiu $8,$0,0x0000003059   	addiu	$t0, $zero, 48		# zera e salva os clocks passados contando com o prox jump - 4 clocks
0x004000e4  0x0810001c  j 0x00400070          60   	j	somins			# volta para o somins - 4 clocks
0x004000e8  0x1192ffff  beq $12,$18,0xffffffff62   somcen:	beq	$t4, $s2, somcen	# verifica se a casa das centenas chegou em 9 - 4 clocks
0x004000ec  0x258c0001  addiu $12,$12,0x00000063   	addiu	$t4, $t4, 1		# soma 1 a casa das centenas - 4 clocks
0x004000f0  0xa20c0000  sb $12,0x00000000($16)64   	sb	$t4, 0($s0)		# salva na memoria o valor da casa das centenas - 4 clocks
0x004000f4  0x00004821  addu $9,$0,$0         65   	addu	$t1, $zero, $zero	# zera o contador de float - 4 clocks
0x004000f8  0xa1a90000  sb $9,0x00000000($13) 66   	sb	$t1, 0($t5)		# salva na memoria o valor do float - 4 clocks
0x004000fc  0x00005021  addu $10,$0,$0        67   	addu 	$t2, $zero, $zero	# zera o contador de unidades - 4 clocks
0x00400100  0xa1ca0000  sb $10,0x00000000($14)68   	sb	$t2, 0($t6)		# salva na memoria o valor das unidades - 4 clocks
0x00400104  0x00005821  addu $11,$0,$0        69   	addu 	$t3, $zero, $zero	# zera o contador de dezenas - 4 clocks
0x00400108  0xa1eb0000  sb $11,0x00000000($15)70   	sb	$t3, 0($t7)		# salva na memoria o valor das dezenas - 4 clocks
0x0040010c  0x00000000  nop                   71   	nop				# adiciona 4 clocks - 4 clocks
0x00400110  0x24080040  addiu $8,$0,0x0000004072   	addiu	$t0, $zero, 64		# zera e salva os clocks passados ate agora contando com o prox jump - 4 clocks
0x00400114  0x0810001c  j 0x00400070          73   	j	somins			# salta pro somins - 4 clocks
